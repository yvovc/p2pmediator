plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id "nu.studer.jooq" version "4.0"
    id 'java'
}

group = 'com.ubisoft.streamin.test-task'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
    set('jooq.version', '3.10.8')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.springframework.session:spring-session-core'
    implementation 'com.opentable.components:otj-pg-embedded:0.13.1'
    jooqRuntime 'org.jooq:jooq-meta-extensions'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
}

jooq {
    admindb(sourceSets.main) {
        generator {
            name = "org.jooq.codegen.DefaultGenerator"
            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
            }
            database {
                name = 'org.jooq.meta.extensions.ddl.DDLDatabase'
                properties {
                    property {
                        key = 'scripts'
                        value = 'src/main/resources/db/migration/V1__init.sql'
                    }
                    property {
                        key = 'sort'
                        value = 'semantic'
                    }
                    property {
                        key = 'unqualifiedSchema'
                        value = 'none'
                    }
                    property {
                        key = 'defaultNameCase'
                        value = 'QUOTED'
                    }
                }
            }
            generate {
                relations = true
                deprecated = false
                records = true
                pojos = true
                fluentSetters = true
                daos = true
                springAnnotations = true
                javaTimeTypes = true
            }
            target {
                packageName = "com.ubisoft.streaming.testtask.p2pmediator"
            }
        }
    }

}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}
